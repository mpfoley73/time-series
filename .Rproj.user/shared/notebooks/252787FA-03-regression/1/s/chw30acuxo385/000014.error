{"frames":[{"func":"ausprod_fc %>% mutate(mu = map_dbl(Beer, ~pluck(.x, \"mu\")), sigma = map_dbl(Beer, \n    ~pluck(.x, \"sigma\")), ci_025 = qnorm(0.025, mu, sigma), ci_100 = qnorm(0.1, \n    mu, sigma), ci_900 = qnorm(0.9, mu, sigma), ci_975 = qnorm(0.975, \n    mu, sigma)) %>% select(.scenario, Quarter, Beer, mu, sigma,  ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"select(., .scenario, Quarter, Beer, mu, sigma, ci_025:ci_975)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"mutate(., mu = map_dbl(Beer, ~pluck(.x, \"mu\")), sigma = map_dbl(Beer, \n    ~pluck(.x, \"sigma\")), ci_025 = qnorm(0.025, mu, sigma), ci_100 = qnorm(0.1, \n    mu, sigma), ci_900 = qnorm(0.9, mu, sigma), ci_975 = qnorm(0.975, \n    mu, sigma))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"mutate.data.frame(., mu = map_dbl(Beer, ~pluck(.x, \"mu\")), sigma = map_dbl(Beer, \n    ~pluck(.x, \"sigma\")), ci_025 = qnorm(0.025, mu, sigma), ci_100 = qnorm(0.1, \n    mu, sigma), ci_900 = qnorm(0.9, mu, sigma), ci_975 = qnorm(0.975, \n    mu, sigma))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"mutate_cols(.data, dplyr_quosures(...), by)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"withCallingHandlers(for (i in seq_along(dots)) {\n    poke_error_context(dots, i, mask = mask)\n    context_poke(\"column\", old_current_column)\n    new_columns <- mutate_col(dots[[i]], data, mask, new_columns) ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"mutate_col(dots[[i]], data, mask, new_columns)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"mask$eval_all_mutate(quo)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"eval()","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"map_dbl(Beer, ~pluck(.x, \"mu\"))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"map_(\"double\", .x, .f, ..., .progress = .progress)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"with_indexed_errors(i = i, names = names, error_call = .purrr_error_call, \n    call_with_cleanup(map_impl, environment(), .type, .progress, \n        n, names, i))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"withCallingHandlers(expr, error = function(cnd) {\n    if (i == 0L) {\n    }\n    else { ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"call_with_cleanup(map_impl, environment(), .type, .progress, \n    n, names, i)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":".handleSimpleError(function (cnd) \n{\n    if (i == 0L) {\n    } ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"h(simpleError(msg, call))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"cli::cli_abort(message, location = i, name = name, parent = cnd, \n    call = error_call, class = \"purrr_error_indexed\")","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"rlang::abort(message, ..., call = call, use_cli_format = TRUE, \n    .frame = .frame)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"signal_abort(cnd, .file)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"signalCondition(cnd)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"(function (cnd) \n{\n    local_error_context(dots, i = frame[[i_sym]], mask = mask)\n    if (inherits(cnd, \"dplyr:::internal_error\")) { ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"abort(message, class = error_class, parent = parent, call = error_call)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"signal_abort(cnd, .file)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"stop(fallback)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0}],"message":"Error in mutate(., mu = map_dbl(Beer, ~pluck(.x, \"mu\")), sigma = map_dbl(Beer,  : \n  \n\u001B[1mCaused by error in `map_dbl()`:\u001B[22m\n\u001B[38;5;250m\u001B[36mℹ\u001B[38;5;250m In index: 1.\n\u001B[36mℹ\u001B[38;5;250m With name: 1.\u001B[39m\n\u001B[1mCaused by error:\u001B[22m\n\u001B[33m!\u001B[39m Result must be length 1, not 0.\n"}