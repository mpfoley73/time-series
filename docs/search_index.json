[["exponential.html", "Chapter 4 Exponential Smoothing (ETS) 4.1 Simple Exponential Smoothing (SES) 4.2 Holt Linear 4.3 Additive Damped Trend 4.4 Holt-Winters 4.5 Model Selection with CV 4.6 Model Selection via Maximum Likelihood", " Chapter 4 Exponential Smoothing (ETS) Exponential smoothing methods are weighted averages of past observations, with the weights decaying exponentially as the observations get more remote. Exponential smoothing is a family of methods that vary by their trend and seasonal components. .cl-ddd59fa4{}.cl-ddce9fb0{font-family:'Arial';font-size:10pt;font-weight:bold;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-ddce9fc4{font-family:'Arial';font-size:10pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-ddd1161e{margin:0;text-align:left;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-ddd11628{margin:0;text-align:center;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-ddd11632{margin:0;text-align:right;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-ddd11633{margin:0;text-align:justify;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-ddd1163c{margin:0;text-align:left;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-ddd12686{width:1.644in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 1pt solid rgba(204, 204, 204, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ddd12687{width:2.177in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ddd12688{width:1.582in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ddd12690{width:1.883in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ddd12691{width:1.644in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 1pt solid rgba(204, 204, 204, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ddd12692{width:2.177in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ddd1269a{width:1.582in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ddd1269b{width:1.883in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ddd1269c{width:1.644in;background-color:transparent;vertical-align: top;border-bottom: 0.75pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 1pt solid rgba(204, 204, 204, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ddd126a4{width:2.177in;background-color:transparent;vertical-align: top;border-bottom: 0.75pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ddd126a5{width:1.582in;background-color:transparent;vertical-align: top;border-bottom: 0.75pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ddd126a6{width:1.883in;background-color:transparent;vertical-align: top;border-bottom: 0.75pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ddd126a7{width:1.644in;background-color:transparent;vertical-align: top;border-bottom: 0.75pt solid rgba(102, 102, 102, 1.00);border-top: 0.75pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 1pt solid rgba(204, 204, 204, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ddd126ae{width:2.177in;background-color:transparent;vertical-align: top;border-bottom: 0.75pt solid rgba(102, 102, 102, 1.00);border-top: 0.75pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ddd126b8{width:1.582in;background-color:transparent;vertical-align: top;border-bottom: 0.75pt solid rgba(102, 102, 102, 1.00);border-top: 0.75pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ddd126b9{width:1.883in;background-color:transparent;vertical-align: top;border-bottom: 0.75pt solid rgba(102, 102, 102, 1.00);border-top: 0.75pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ddd126ba{width:1.644in;background-color:transparent;vertical-align: top;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0.75pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 1pt solid rgba(204, 204, 204, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ddd126bb{width:2.177in;background-color:transparent;vertical-align: top;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0.75pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ddd126c2{width:1.582in;background-color:transparent;vertical-align: top;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0.75pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ddd126c3{width:1.883in;background-color:transparent;vertical-align: top;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0.75pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;} Table 4.1: Exponential smoothing taxonomy. Seasonal ComponentTrend ComponentNone (N)Additive (A)Multiplicative (M)None (N)(N, N)Simple Exponential Smoothing(N, A)(N, M)Additive (A)(A, N)Holtâ€™s Linear(A, A)Additive Holt-Winters(A, M)Multiplicative Holt-WintersAdditive Damped (Ad)(Ad, N)Additive damped trend(Ad, A)(Ad, M)Holt-Winters Damped There can be no trend (N), an additive (A) linear trend from the forecast horizon, or a damped additive (Ad) trend leveling off from the forecast horizon.1 There can be no seasonality (N), or it can be additive (A) or multiplicative (M). The trend and seasonal combinations produce 3 x 3 = 9 possible exponential smoothing methods. ETS (Error, Trend, and Seasonality) models double the number of possible state space models to 18 by treating the error variances as either additive (A) or multiplicative (M). ETS models do not just extend the exponential smoothing models; they also estimate their parameters differently, using maximum likelihood estimation. For models with additive errors, this is equivalent to minimizing the sum of squared errors (SSE). The great advantage of using ETS models is that you can optimize the parameter settings by minimizing the Akaike Information Criterion (AICc). fable::ETS() fits ETS models: ETS(y ~ error(c(&quot;A&quot;, &quot;M&quot;)) + trend(c(&quot;N&quot;, &quot;A&quot;, &quot;Ad&quot;)) + season(c(&quot;N&quot;, &quot;A&quot;, &quot;M&quot;)) 4.1 Simple Exponential Smoothing (SES) Simple exponential smoothing models have no seasonal or trend components. Simple exponential smoothing models are of the form \\(\\hat{y}_{T+h|T} = \\alpha(1-\\alpha)^0 y_{T-0} + \\alpha(1-\\alpha)^1y_{T-1} + \\alpha(1-\\alpha)^2y_{T-2} \\dots\\) where \\(0 &lt; \\alpha &lt; 1\\) is a weighting parameter. On the one extreme, \\(\\alpha\\) = 1 is the same as a naive model. On the other extreme \\(\\alpha \\approx\\) 0 is the average model. ETS models are commonly expressed in component form as a recursive model. The component form of SES is \\[ \\begin{align} \\hat{y}_{t+h|t} &amp;= l_t \\\\ l_t &amp;= \\alpha y_t + (1 - \\alpha)l_{t-1} \\end{align} \\] The first component, \\(\\hat{y}_{t+h|t}\\), is the forecast. It equals the last value of the estimated level, kind of like a y-intercept. The second component, \\(l_t\\) is the level (or smoothed value) of the series at time \\(t\\). It describes how the level changes over time, kind of like a slope. ETS uses nonlinear optimization to estimate two parameters for SES, \\(\\alpha\\) and \\(l_0\\). Example Data set tsibbledata::global_economy contains annual country-level economic indicators, including Exports. This time series has no trend or seasonality, so it is a good candidate for an SES model. tsibbledata::global_economy %&gt;% filter(Country == &quot;Algeria&quot;) %&gt;% ggplot(aes(x = Year, y = Exports)) + geom_line() + labs(title = &quot;Algerian Exports (% of GDP)&quot;) fable::ETS() is the exponential smoothing function. With additive errors, this is an ETS(A, N, N) model. ses_fit &lt;- tsibbledata::global_economy %&gt;% filter(Country == &quot;Algeria&quot;) %&gt;% model(ETS(Exports ~ error(&quot;A&quot;) + trend(&quot;N&quot;) + season(&quot;N&quot;))) ses_fit %&gt;% report() ## Series: Exports ## Model: ETS(A,N,N) ## Smoothing parameters: ## alpha = 0.8399875 ## ## Initial states: ## l[0] ## 39.539 ## ## sigma^2: 35.6301 ## ## AIC AICc BIC ## 446.7154 447.1599 452.8968 The fit estimates \\(\\hat{l}_0\\) = 39.539 percent of GDP are exports at period 0 (1960), and \\(\\hat{\\alpha}\\) = 0.840, a high weight on the prior value. Check the model assumptions with residuals plots. gg_tsresiduals(ses_fit) Residual heteroscedasticity compromises prediction intervals. The innovation residuals vs time plot does not show heteroscedasticity.2 It does show a potential outlier around 1962 which might be a concern. Autocorrelation increases prediction intervals. The autocorrelation function plot shows a barely significant negative spike at lag 12 years. Non-normal residuals also compromise prediction intervals. The residual distribution in the histogram is slightly left-skewed. Use the fitted model to forecast the response variable for five periods. ses_fc &lt;- ses_fit %&gt;% forecast(h = 5) %&gt;% hilo(80) %&gt;% mutate( lpi = map_dbl(`80%`, ~.$lower), upi = map_dbl(`80%`, ~.$upper) ) ses_fit %&gt;% augment() %&gt;% ggplot(aes(x = Year)) + geom_line(aes(y = Exports)) + geom_line(aes(y = .fitted), color = &quot;goldenrod&quot;) + geom_line(data = ses_fc, aes(y = .mean), color = &quot;goldenrod&quot;) + geom_ribbon(data = ses_fc, aes(ymin = lpi, ymax = upi), alpha = 0.2, fill = &quot;goldenrod&quot;) + labs(title = &quot;Simple Exponential Smoothing, ETS(A, N, N)&quot;) 4.2 Holt Linear Holtâ€™s linear method extends SES with a trend component, \\(b_t\\). \\[ \\begin{align} \\hat{y}_{t+h|t} &amp;= l_t + hb_t \\\\ l_t &amp;= \\alpha y_t + (1 - \\alpha)(l_{t-1} + hb_{t-1}) \\\\ b_t &amp;= \\beta^*(l_t - l_{t-1}) + (1 - \\beta^*)b_{t-1} \\end{align} \\] The level equation, \\(l_t\\) is the same except for a trend adjustment. The trend equation, \\(b_t\\), describes how the slope changes over time. The parameter \\(\\beta^*\\) describes how quickly the slope can change. Now there are four parameter to estimate, \\(\\alpha\\), \\(l_0\\), \\(\\beta^*\\), and \\(b_0\\). Example Data set tsibbledata::global_economy contains annual country-level economic indicators, including Population size. This time series has a trend, so it is a good candidate for Holtâ€™s linear trend method. tsibbledata::global_economy %&gt;% filter(Country == &quot;Australia&quot;) %&gt;% ggplot(aes(x = Year, y = Population)) + geom_line() + labs(title = &quot;Australian Population.&quot;) Fit the model with ETS() again, but this time specify an additive trend, ETS(A, A, N). holt_fit &lt;- tsibbledata::global_economy %&gt;% filter(Country == &quot;Australia&quot;) %&gt;% model(ETS(Population ~ error(&quot;A&quot;) + trend(&quot;A&quot;) + season(&quot;N&quot;))) holt_fit %&gt;% report() ## Series: Population ## Model: ETS(A,A,N) ## Smoothing parameters: ## alpha = 0.9998992 ## beta = 0.3257153 ## ## Initial states: ## l[0] b[0] ## 10067191 228012.5 ## ## sigma^2: 4139605871 ## ## AIC AICc BIC ## 1525.705 1526.859 1536.008 ETS() estimates an \\(\\hat{l}_0\\) of 10,067,191 people at period 0 (1960) with a very high weighting on recent values \\(\\hat{\\alpha}\\) of 0.9999. \\(\\alpha\\) is high when the trend increases rapidly. \\(\\beta_0\\) is 228,013 with a \\(\\hat{\\beta}\\) of 0.326. This is a fairly large \\(\\hat{\\beta}\\), meaning the trend changes often. Check the model assumptions with residuals plots. No heteroscedasticity in the residuals vs time plot and no skew in the residual distribution plot, so the prediction intervals are reliable. The autocorrelation plot has no significant spikes, so the prediction intervals will not be unduly large. gg_tsresiduals(holt_fit) Use the fitted model to forecast the response variable for ten periods. holt_fc &lt;- holt_fit %&gt;% forecast(h = 10) %&gt;% hilo(80) %&gt;% mutate( lpi = map_dbl(`80%`, ~.$lower), upi = map_dbl(`80%`, ~.$upper) ) holt_fit %&gt;% augment() %&gt;% ggplot(aes(x = Year)) + geom_line(aes(y = Population)) + geom_line(aes(y = .fitted), color = &quot;goldenrod&quot;) + geom_line(data = holt_fc, aes(y = .mean), color = &quot;goldenrod&quot;) + geom_ribbon(data = holt_fc, aes(ymin = lpi, ymax = upi), alpha = 0.2, fill = &quot;goldenrod&quot;) + labs(title = &quot;Holt&#39;s Linear Method, ETS(A, A, N)&quot;) 4.3 Additive Damped Trend Holtâ€™s linear trend produces a sloped, but straight line. Research shows that constant trends tend to overshoot. The additive damped trend model introduces a damping parameter, \\(\\phi\\), to reduce the forecasted trend to a flat line over time. The forecast equation replaces \\(h\\) with the series \\(\\phi^1 + \\phi^2 + \\cdots + \\phi^h\\). The trend equation adds \\(\\phi\\) as a multiplier to the second term. \\[ \\begin{align} \\hat{y}_{t+h|t} &amp;= l_t + (\\phi^1 + \\phi^2 + \\cdots + \\phi^h)b_t \\\\ l_t &amp;= \\alpha y_t + (1 - \\alpha)(l_{t-1} + \\phi b_{t-1}) \\\\ b_t &amp;= \\beta^*(l_t - l_{t-1}) + (1 - \\beta^*) \\phi b_{t-1} \\end{align} \\] Now there are five parameters to estimate, \\(\\alpha\\), \\(\\beta^*\\), \\(l_0\\), \\(b_0\\), and \\(\\phi\\) (although you can supply a \\(\\phi\\) value to the trend() equation. Expect \\(\\phi\\) to between .8 and .998. Example Return to the Australian population data. You can fit the original model and the additive damped trend model in a single statement. The new model is an ETS(A, Ad, N). dholt_fit &lt;- tsibbledata::global_economy %&gt;% filter(Country == &quot;Australia&quot;) %&gt;% model( `Holt&#39;s Linear` = ETS(Population ~ error(&quot;A&quot;) + trend(&quot;A&quot;) + season(&quot;N&quot;)), `Damped Holt&#39;s Linear` = ETS(Population ~ error(&quot;A&quot;) + trend(&quot;Ad&quot;) + season(&quot;N&quot;)) ) dholt_fit %&gt;% select(`Damped Holt&#39;s Linear`) %&gt;% report() ## Series: Population ## Model: ETS(A,Ad,N) ## Smoothing parameters: ## alpha = 0.9998988 ## beta = 0.4392868 ## phi = 0.98 ## ## Initial states: ## l[0] b[0] ## 10067191 277729.2 ## ## sigma^2: 4584582964 ## ## AIC AICc BIC ## 1532.543 1534.190 1544.906 ETS() estimates \\(\\hat{\\phi}\\) = 0.980 - just a small amount of damping. dholt_fc &lt;- dholt_fit %&gt;% forecast(h = 10) %&gt;% hilo(80) %&gt;% mutate( lpi = map_dbl(`80%`, ~.$lower), upi = map_dbl(`80%`, ~.$upper) ) palette_dholt &lt;- c(`Holt&#39;s Linear` = &quot;goldenrod&quot;, `Damped Holt&#39;s Linear` = &quot;seagreen&quot;) dholt_fit %&gt;% augment() %&gt;% ggplot(aes(x = Year)) + geom_line(aes(y = Population)) + geom_line(aes(y = .fitted, color = .model)) + geom_line(data = dholt_fc, aes(y = .mean, color = .model)) + geom_ribbon(data = dholt_fc, aes(ymin = lpi, ymax = upi, color = .model, fill = .model), alpha = 0.2) + scale_fill_manual(values = palette_dholt) + scale_color_manual(values = palette_dholt) + theme(legend.position = &quot;top&quot;) + labs(color = NULL, fill = NULL, title = &quot;Holt&#39;s Linear Method, ETS(A, A, N), and Additive Damped, ETS(A, Ad, N)&quot;) 4.4 Holt-Winters The Holt-Winters method extends Holtâ€™s method with a seasonality component, \\(s_t\\), for \\(m\\) seasons per period. There are two versions of this model, the additive and the multiplicative. The additive method assumes the error variance is constant, and the seasonal component sums to approximately zero over the course of the year. The multiplicative version assumes the error variance scales with the level, and the seasonal component sums to approximately \\(m\\) over the course of the year. 4.4.1 Additive Holt-Winters The additive method introduces the seasonality component as an additive element. \\[ \\begin{align} \\hat{y}_{t+h|t} &amp;= l_t + hb_t + s_{t+h-m(k+1)} \\\\ l_t &amp;= \\alpha(y_t - s_{t-m}) + (1 - \\alpha)(l_{t-1} + b_{t-1}) \\\\ b_t &amp;= \\beta^*(l_t - l_{t-1}) + (1 - \\beta^*)b_{t-1} \\\\ s_t &amp;= \\gamma(y_t - l_{t-1} - b_{t-1}) + (1 - \\gamma)s_{t-m} \\end{align} \\] \\(k\\) is the modulus of \\((h - 1) / m\\), so \\(s_{t+h-m(k+1)}\\) is always based on the prior seasonal period. \\(l_t\\) is a weighted average (\\(alpha\\) weighting) between the seasonally adjusted observation and the non-seasonal forecast. The trend component is unchanged. The seasonal component is a weighted average (\\(\\gamma\\) weighting) between the current seasonal index and the same season of the prior season period. Now there are five smoothing parameters to estimate: \\(\\alpha\\), \\(l_0\\), \\(\\beta^*\\), \\(b_0\\), and \\(\\gamma\\), plus an initial value for each season of the seasonal period. 4.4.2 Multiplicative Holt-Winters In the multiplicative version, the seasonality averages to one. Use the multiplicative method if the seasonal variation increases with the level. \\[ \\begin{align} \\hat{y}_{t+h|t} &amp;= (l_t + hb_t) s_{t+h-m(k+1)} \\\\ l_t &amp;= \\alpha\\frac{y_t}{s_{t-m}} + (1 - \\alpha)(l_{t-1} + b_{t-1}) \\\\ b_t &amp;= \\beta^*(l_t - l_{t-1}) + (1-\\beta*)b_{t-1} \\\\ s_t &amp;= \\gamma\\frac{y_t}{(l_{t-1} - b_{t-1})} + (1 - \\gamma)s_{t-m} \\\\ \\end{align} \\] Example Data set tsibble::tourism contains quarterly domestic tourist visit-nights in Australia. The plot below is extended with forecasts using the Holt-Winters additive method and the Holt-Winters seasonal method. Itâ€™s not obvious whether the error variance increases with the series level, so either the additive or the multiplicative method may be appropriate. The RMSE from the multiplicative model tour &lt;- tsibble::tourism %&gt;% filter(Purpose == &quot;Holiday&quot;) %&gt;% summarize(Trips = sum(Trips) / 1000) tour_fit &lt;- tour %&gt;% model( Additive = ETS(Trips ~ error(&quot;A&quot;) + trend(&quot;A&quot;) + season(&quot;A&quot;)), Multiplicative = ETS(Trips ~ error(&quot;M&quot;) + trend(&quot;A&quot;) + season(&quot;M&quot;)) ) tour_fit %&gt;% report() ## Warning in report.mdl_df(.): Model reporting is only supported for individual ## models, so a glance will be shown. To see the report for a specific model, use ## `select()` and `filter()` to identify a single model. ## # A tibble: 2 Ã— 9 ## .model sigma2 log_lik AIC AICc BIC MSE AMSE MAE ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 Additive 0.193 -105. 229. 231. 250. 0.174 0.184 0.321 ## 2 Multiplicative 0.00212 -104. 227. 229. 248. 0.170 0.183 0.0328 tour_fit_fc &lt;- tour_fit %&gt;% forecast(h = 10) %&gt;% mutate(sigma = map_dbl(Trips, ~unlist(.) %&gt;% .[&quot;mu&quot;]), ci_025 = qnorm(.025, .mean, sigma), ci_975 = qnorm(.975, .mean, sigma)) tour_fit_aug &lt;- tour_fit %&gt;% augment() tour_fit_aug %&gt;% # filter(.model == &quot;Additive&quot;) %&gt;% ggplot(aes(x = Quarter)) + geom_line(aes(y = Trips)) + geom_line(aes(y = .fitted, color = .model)) + geom_line(data = tour_fit_fc, aes(y = .mean, color = .model)) + geom_ribbon(data = tour_fit_fc, aes(ymin = ci_025, ymax = ci_975, fill = .model), alpha = 0.2) + scale_color_manual(values = c(&quot;Additive&quot; = &quot;goldenrod&quot;, &quot;Multiplicative&quot; = &quot;slategray&quot;)) + scale_fill_manual(values = c(&quot;Additive&quot; = &quot;goldenrod&quot;, &quot;Multiplicative&quot; = &quot;slategray&quot;)) + theme_light() + labs(title = &quot;Australian Domestic Tourism with Holt-Winters Models.&quot;, y = &quot;Trips (millions)&quot;, fill = &quot;Model&quot;, color = &quot;Model&quot;) ## Warning: The output of `fortify(&lt;fable&gt;)` has changed to better suit usage with the ggdist package. ## If you&#39;re using it to extract intervals, consider using `hilo()` to compute intervals, and `unpack_hilo()` to obtain values. ## The output of `fortify(&lt;fable&gt;)` has changed to better suit usage with the ggdist package. ## If you&#39;re using it to extract intervals, consider using `hilo()` to compute intervals, and `unpack_hilo()` to obtain values. Notice below that the additive seasonal component estimates (s[0] to s[-3]) sum to approximately zero. tour_fit %&gt;% select(Additive) %&gt;% report() ## Series: Trips ## Model: ETS(A,A,A) ## Smoothing parameters: ## alpha = 0.2620382 ## beta = 0.04314266 ## gamma = 0.0001000312 ## ## Initial states: ## l[0] b[0] s[0] s[-1] s[-2] s[-3] ## 9.791341 0.02106875 -0.534408 -0.6697662 -0.2937802 1.497954 ## ## sigma^2: 0.1931 ## ## AIC AICc BIC ## 228.5676 231.1390 250.0058 And the multiplicative seasonal component estimates (s[0] to s[-3]) sum to approximately 4 - the number of seasons in the seasonal period. tour_fit %&gt;% select(Multiplicative) %&gt;% report() ## Series: Trips ## Model: ETS(M,A,M) ## Smoothing parameters: ## alpha = 0.2236926 ## beta = 0.03042124 ## gamma = 0.0001000009 ## ## Initial states: ## l[0] b[0] s[0] s[-1] s[-2] s[-3] ## 10.01351 -0.01141645 0.9430572 0.9270043 0.9692079 1.160731 ## ## sigma^2: 0.0021 ## ## AIC AICc BIC ## 226.7196 229.2910 248.1578 Check the model assumptions with checkresiduals. The residuals plot shows some long-term autocorrelation (a long hump), and the variance increases in the latter years. The histogram shows a normal distribution. The autocorrelation function (ACF) plot shows many spikes outside the insignificance band, and the Ljung-Box test rejects the null hypothesis of no autocorrelation of the residuals (p &lt; 0.0001). # checkresiduals(a10.hw) Here is a four-week Holt-Winters forecast of the hyndsight dataset of daily pageviews on the Hyndsight blog for one year starting April 30, 2014. Create a training dataset consisting of all obserations minus the last four weeks. Then forecast those four weeks with Holt-Winters. Use the additive method because the variance is not scaling with page volume. Creae a second forecast with the seasonal naive method as a benchmark. Notice that the Ljung-Box test rejects the null hypothesis of no autocorrelation of the residuals. The forecast might still provide useful information even with residuals that fail the white noise test. # hyndsight.train &lt;- subset(hyndsight, end = length(hyndsight) - 4*7) # # hyndsight.hw &lt;- hw(hyndsight.train, seasonal = &quot;additive&quot;, h = 4*7) # # hyndsight.sn &lt;- snaive(hyndsight.train, h = 4*7) # # checkresiduals(hyndsight.hw) Compare Holt-Winters to the seasonal naive forecast. The RMSE of Holt-Winters (201.7656) is smaller than the RMSE of seasonal naive (202.7610), so it is the more accurate forecast. # accuracy(hyndsight.hw, hyndsight) # accuracy(hyndsight.sn, hyndsight) Here finally is a plot of the forecasted page views. # autoplot(hyndsight) + # autolayer(hyndsight.hw$mean) 4.5 Model Selection with CV Letâ€™s compare the performance of a few candidate models for the base R datasets::WWWusage data set of internet usage. datasets::WWWusage %&gt;% as_tsibble() %&gt;% ggplot(aes(x = index, y = value)) + geom_line() + theme_light() + labs(title = &quot;Internet usage by minute&quot;, x = NULL, y = &quot;Users&quot;) We will use time-series cross-validation. The data set has 100 rows. Function stretch_tsibble(.init, .step) takes a tsibble and creates a new tsibble for cross validation. First stretch_tsibble() takes the first .init rows from the tsibble and adds a new column .id with value 1. Then it takes the first .init + .step rows from the tsibble and assigns .id value 2. It continues like this, creating longer and longer tsibbles until it cannot create a longer one from the original tsibble. Finally, it appends these together into one long tsibble with .id added to the index. Nofmal cross-validation repeatedly fits a model to data set with one of the rows left out. Since model() fits a separate model per index value, creating this long tsibble effectively accomplishes the same thing. Note the fundamental difference here though: time seris CV does not leave out single values from points along in the time series. It leaves out all points after a particular point along the time series - each sub-data set starts at the beginning and is uninterrupted until reaching the varying end points. Letâ€™s take a look at the CV data set before using it to fit the models. www_cv &lt;- datasets::WWWusage %&gt;% as_tsibble() %&gt;% stretch_tsibble(.init = 10, .step = 1) # 10 rows + 11 rows + ... + 100 rows = 5,005 rows: nrow(www_cv) ## [1] 5005 # .id added to index head(www_cv) ## # A tsibble: 6 x 3 [1] ## # Key: .id [1] ## index value .id ## &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt; ## 1 1 88 1 ## 2 2 84 1 ## 3 3 85 1 ## 4 4 85 1 ## 5 5 84 1 ## 6 6 85 1 # 91 index values summary(www_cv$.id) ## Min. 1st Qu. Median Mean 3rd Qu. Max. ## 1.00 42.00 62.00 58.55 78.00 91.00 Fit four models to the 91 data sets to compare the accuracy. Hereâ€™s the full code. datasets::WWWusage %&gt;% as_tsibble() %&gt;% stretch_tsibble(.init = 10, .step = 1) %&gt;% model( OLS = TSLM(value ~ index), `Simple Exponential Smoothing` = ETS(value ~ error(&quot;A&quot;) + trend(&quot;N&quot;) + season(&quot;N&quot;)), `Holt&#39;s method` = ETS(value ~ error(&quot;A&quot;) + trend(&quot;A&quot;) + season(&quot;N&quot;)), `Holt&#39;s method (damped)` = ETS(value ~ error(&quot;A&quot;) + trend(&quot;Ad&quot;) + season(&quot;N&quot;)) ) %&gt;% forecast(h = 1) %&gt;% accuracy(data = as_tsibble(datasets::WWWusage)) ## Warning: The future dataset is incomplete, incomplete out-of-sample data will be treated as missing. ## 1 observation is missing at 101 ## # A tibble: 4 Ã— 10 ## .model .type ME RMSE MAE MPE MAPE MASE RMSSE ACF1 ## &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 Holt&#39;s method Test 0.0610 3.87 3.17 0.244 2.38 0.701 0.668 0.296 ## 2 Holt&#39;s method (dampâ€¦ Test 0.288 3.69 3.00 0.347 2.26 0.663 0.636 0.336 ## 3 OLS Test -6.01 38.7 31.4 -10.8 24.8 6.94 6.67 0.974 ## 4 Simple Exponential â€¦ Test 1.46 6.05 4.81 0.904 3.55 1.06 1.04 0.803 The best model as measured by RMSE was Holtâ€™s method with damping. OLS was pretty bad. Letâ€™s fit it to the whole data set and forecast future periods. www_fit &lt;- datasets::WWWusage %&gt;% as_tsibble() %&gt;% model(holt_d = ETS(value ~ error(&quot;A&quot;) + trend(&quot;Ad&quot;) + season(&quot;N&quot;))) www_fit %&gt;% report() ## Series: value ## Model: ETS(A,Ad,N) ## Smoothing parameters: ## alpha = 0.9999 ## beta = 0.9966439 ## phi = 0.814958 ## ## Initial states: ## l[0] b[0] ## 90.35177 -0.01728234 ## ## sigma^2: 12.2244 ## ## AIC AICc BIC ## 717.7310 718.6342 733.3620 This time the damping parameter is very small (0.815), resulting in a quick return to the horizontal. www_fc &lt;- www_fit %&gt;% forecast(h = 10) %&gt;% mutate(sigma = map_dbl(value, ~unlist(.) %&gt;% .[&quot;mu&quot;]), ci_025 = qnorm(.025, .mean, sigma), ci_975 = qnorm(.975, .mean, sigma)) www_fit %&gt;% augment() %&gt;% ggplot(aes(x = index)) + geom_line(aes(y = value)) + geom_line(aes(y = .fitted), color = &quot;goldenrod&quot;) + geom_line(data = www_fc, aes(y = .mean), color = &quot;goldenrod&quot;) + geom_ribbon(data = www_fc, aes(ymin = ci_025, ymax = ci_975), alpha = 0.2, fill = &quot;goldenrod&quot;) + theme_light() + labs(title = &quot;Internet usage by Minute.&quot;, subtitle = &quot;Holt&#39;s method with damping. Shaded are is 95% prediction interval.&quot;, x = NULL) ## Warning: The output of `fortify(&lt;fable&gt;)` has changed to better suit usage with the ggdist package. ## If you&#39;re using it to extract intervals, consider using `hilo()` to compute intervals, and `unpack_hilo()` to obtain values. ## The output of `fortify(&lt;fable&gt;)` has changed to better suit usage with the ggdist package. ## If you&#39;re using it to extract intervals, consider using `hilo()` to compute intervals, and `unpack_hilo()` to obtain values. 4.6 Model Selection via Maximum Likelihood If you specify an ETS model with no parameters, it will use maximum likelihood to select the model with the minimum AICc. Try it with the internet usage data set. ets_mdl &lt;- datasets::WWWusage %&gt;% as_tsibble() %&gt;% model(ETS(value)) ets_mdl %&gt;% report() ## Series: value ## Model: ETS(A,Ad,N) ## Smoothing parameters: ## alpha = 0.9999 ## beta = 0.9966439 ## phi = 0.814958 ## ## Initial states: ## l[0] b[0] ## 90.35177 -0.01728234 ## ## sigma^2: 12.2244 ## ## AIC AICc BIC ## 717.7310 718.6342 733.3620 ETS chose an additive damped trend model, the same as we found using cross validation. The trend can also be multiplicative (M) or multiplicative damped (Md), but Hyndman explains that they do not produce good forecasts.â†©ï¸Ž Innovation residuals are residuals on the transformed scale if the outcome variable was transformed.â†©ï¸Ž "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
